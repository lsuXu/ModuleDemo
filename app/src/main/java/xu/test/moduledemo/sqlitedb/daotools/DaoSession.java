package xu.test.moduledemo.sqlitedb.daotools;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import xu.test.moduledemo.sqlitedb.bean.Customer;
import xu.test.moduledemo.sqlitedb.bean.Unique;
import xu.test.moduledemo.sqlitedb.result.A;
import xu.test.moduledemo.sqlitedb.bean.Btn;

import xu.test.moduledemo.sqlitedb.daotools.CustomerDao;
import xu.test.moduledemo.sqlitedb.daotools.UniqueDao;
import xu.test.moduledemo.sqlitedb.daotools.ADao;
import xu.test.moduledemo.sqlitedb.daotools.BtnDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig customerDaoConfig;
    private final DaoConfig uniqueDaoConfig;
    private final DaoConfig aDaoConfig;
    private final DaoConfig btnDaoConfig;

    private final CustomerDao customerDao;
    private final UniqueDao uniqueDao;
    private final ADao aDao;
    private final BtnDao btnDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        uniqueDaoConfig = daoConfigMap.get(UniqueDao.class).clone();
        uniqueDaoConfig.initIdentityScope(type);

        aDaoConfig = daoConfigMap.get(ADao.class).clone();
        aDaoConfig.initIdentityScope(type);

        btnDaoConfig = daoConfigMap.get(BtnDao.class).clone();
        btnDaoConfig.initIdentityScope(type);

        customerDao = new CustomerDao(customerDaoConfig, this);
        uniqueDao = new UniqueDao(uniqueDaoConfig, this);
        aDao = new ADao(aDaoConfig, this);
        btnDao = new BtnDao(btnDaoConfig, this);

        registerDao(Customer.class, customerDao);
        registerDao(Unique.class, uniqueDao);
        registerDao(A.class, aDao);
        registerDao(Btn.class, btnDao);
    }
    
    public void clear() {
        customerDaoConfig.clearIdentityScope();
        uniqueDaoConfig.clearIdentityScope();
        aDaoConfig.clearIdentityScope();
        btnDaoConfig.clearIdentityScope();
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public UniqueDao getUniqueDao() {
        return uniqueDao;
    }

    public ADao getADao() {
        return aDao;
    }

    public BtnDao getBtnDao() {
        return btnDao;
    }

}
